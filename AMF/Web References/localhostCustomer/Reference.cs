//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AMF.localhostCustomer {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CustomerServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CustomerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViewAllCustomersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CustomerService() {
            this.Url = global::AMF.Properties.Settings.Default.AMF_localhostCustomer_CustomerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddCustomerCompletedEventHandler AddCustomerCompleted;
        
        /// <remarks/>
        public event FindCustomerCompletedEventHandler FindCustomerCompleted;
        
        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;
        
        /// <remarks/>
        public event DeleteCustomerCompletedEventHandler DeleteCustomerCompleted;
        
        /// <remarks/>
        public event ViewAllCustomersCompletedEventHandler ViewAllCustomersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCustomer(int cid, string cusername, string cpassword, string cemail, string cmobile) {
            object[] results = this.Invoke("AddCustomer", new object[] {
                        cid,
                        cusername,
                        cpassword,
                        cemail,
                        cmobile});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCustomerAsync(int cid, string cusername, string cpassword, string cemail, string cmobile) {
            this.AddCustomerAsync(cid, cusername, cpassword, cemail, cmobile, null);
        }
        
        /// <remarks/>
        public void AddCustomerAsync(int cid, string cusername, string cpassword, string cemail, string cmobile, object userState) {
            if ((this.AddCustomerOperationCompleted == null)) {
                this.AddCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerOperationCompleted);
            }
            this.InvokeAsync("AddCustomer", new object[] {
                        cid,
                        cusername,
                        cpassword,
                        cemail,
                        cmobile}, this.AddCustomerOperationCompleted, userState);
        }
        
        private void OnAddCustomerOperationCompleted(object arg) {
            if ((this.AddCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerCompleted(this, new AddCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FindCustomer(int cid) {
            object[] results = this.Invoke("FindCustomer", new object[] {
                        cid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FindCustomerAsync(int cid) {
            this.FindCustomerAsync(cid, null);
        }
        
        /// <remarks/>
        public void FindCustomerAsync(int cid, object userState) {
            if ((this.FindCustomerOperationCompleted == null)) {
                this.FindCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindCustomerOperationCompleted);
            }
            this.InvokeAsync("FindCustomer", new object[] {
                        cid}, this.FindCustomerOperationCompleted, userState);
        }
        
        private void OnFindCustomerOperationCompleted(object arg) {
            if ((this.FindCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCustomerCompleted(this, new FindCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCustomer(int cid, string cusername, string cpassword, string cemail, string cmobile) {
            object[] results = this.Invoke("UpdateCustomer", new object[] {
                        cid,
                        cusername,
                        cpassword,
                        cemail,
                        cmobile});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(int cid, string cusername, string cpassword, string cemail, string cmobile) {
            this.UpdateCustomerAsync(cid, cusername, cpassword, cemail, cmobile, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(int cid, string cusername, string cpassword, string cemail, string cmobile, object userState) {
            if ((this.UpdateCustomerOperationCompleted == null)) {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        cid,
                        cusername,
                        cpassword,
                        cemail,
                        cmobile}, this.UpdateCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerOperationCompleted(object arg) {
            if ((this.UpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new UpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCustomer(int cid) {
            object[] results = this.Invoke("DeleteCustomer", new object[] {
                        cid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(int cid) {
            this.DeleteCustomerAsync(cid, null);
        }
        
        /// <remarks/>
        public void DeleteCustomerAsync(int cid, object userState) {
            if ((this.DeleteCustomerOperationCompleted == null)) {
                this.DeleteCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerOperationCompleted);
            }
            this.InvokeAsync("DeleteCustomer", new object[] {
                        cid}, this.DeleteCustomerOperationCompleted, userState);
        }
        
        private void OnDeleteCustomerOperationCompleted(object arg) {
            if ((this.DeleteCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCustomerCompleted(this, new DeleteCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViewAllCustomers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ViewAllCustomers() {
            object[] results = this.Invoke("ViewAllCustomers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ViewAllCustomersAsync() {
            this.ViewAllCustomersAsync(null);
        }
        
        /// <remarks/>
        public void ViewAllCustomersAsync(object userState) {
            if ((this.ViewAllCustomersOperationCompleted == null)) {
                this.ViewAllCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViewAllCustomersOperationCompleted);
            }
            this.InvokeAsync("ViewAllCustomers", new object[0], this.ViewAllCustomersOperationCompleted, userState);
        }
        
        private void OnViewAllCustomersOperationCompleted(object arg) {
            if ((this.ViewAllCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViewAllCustomersCompleted(this, new ViewAllCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddCustomerCompletedEventHandler(object sender, AddCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void FindCustomerCompletedEventHandler(object sender, FindCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateCustomerCompletedEventHandler(object sender, UpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteCustomerCompletedEventHandler(object sender, DeleteCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ViewAllCustomersCompletedEventHandler(object sender, ViewAllCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViewAllCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViewAllCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591